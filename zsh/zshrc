# Handle Mac platforms
CPU=$(uname -p)
if [[ "$CPU" == "arm" ]]; then
  # Apple Silicon Brew
  export PATH=/opt/homebrew/bin:$PATH
  export PATH=/opt/homebrew/sbin:$PATH
  # Intel Brew
  export PATH=/usr/local/sbin:$PATH
  alias oldbrew=/usr/local/bin/brew
else
  export PATH="/usr/local/bin:$PATH"
fi

export PATH=$HOME/.local/bin:$PATH

if which tmux 2>&1 >/dev/null; then
  if [ $TERM != "screen-256color" ] && [ $TERM != "screen" ] && [ -z "$VSCODE_INJECTION" ]; then
    tmux attach -t general || tmux new -s general
  fi
fi

# `shift-tab` to reverse through completions menu
# http://stackoverflow.com/a/842370
bindkey '^[[Z' reverse-menu-complete

bindkey -v
# `jk` to go into normal mode
bindkey -M viins 'jk' vi-cmd-mode

# Word style: directory delimiter
# http://stackoverflow.com/a/1438523
autoload -U select-word-style
select-word-style bash

# Delete git's official completions to enable zsh's official git completions,
# which are a lot better.
function () {
  GIT_ZSH_COMPLETIONS_FILE_PATH="$(brew --prefix)/share/zsh/site-functions/_git"
  if [ -f $GIT_ZSH_COMPLETIONS_FILE_PATH ]; then
    rm $GIT_ZSH_COMPLETIONS_FILE_PATH
  fi
}

export HISTSIZE=100000
export SAVEHIST=$HISTSIZE
export HISTFILE="$HOME/.zsh_history"

# Do not display a line previously found.
setopt HIST_FIND_NO_DUPS
# Delete old recorded entry if new entry is a duplicate.
setopt HIST_IGNORE_ALL_DUPS
# Write to the history file immediately, not when the shell exits.
setopt INC_APPEND_HISTORY
# Share history between all sessions.
setopt SHARE_HISTORY

# Load fzf if installed
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh && source <(fzf --zsh)

alias vim="nvim"
alias vi="nvim"
export EDITOR='nvim'

# rbenv - ruby version manager
eval "$(rbenv init -)"

# nvm - node version managaer
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


#
# ls color
#
if [[ "$OSTYPE" == darwin* ]]; then
  ls -G . &>/dev/null && alias ls='ls -G'
else
  ls --color -d . &>/dev/null && alias ls='ls --color=tty'
fi

#
# zplug
#

# Check if zplug is installed
if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh

# "Pure" theme
zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

# I grew used to the aliases
zplug "plugins/git", from:oh-my-zsh
alias gcof='gco $(gb | fzf)'
alias lg='lazygit'

zplug "zsh-users/zsh-completions"

# Bind UP/DOWN in insert mode and k/j in normal mode to history search.
zplug "zsh-users/zsh-history-substring-search", defer:3
if [[ "$OSTYPE" == darwin* ]]; then
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
else
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down
fi

zplug "zsh-users/zsh-syntax-highlighting", defer:3

if ! zplug check --verbose; then; zplug install; fi

zplug load --verbose
